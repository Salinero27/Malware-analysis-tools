import idaapi
import idc
import idautils

#SCRIPT TO DECODE ANATOVA STRINGS

DECRYPT_ASCII = 0x4024B9
for xref in idautils.CodeRefsTo(DECRYPT_ASCII,0):
    addr = xref - 76
    count = 0
    mnemonic = idc.print_insn_mnem(addr)
    while mnemonic != "cmp" and count < 20:
        addr = idc.prev_head(addr)
        mnemonic = idc.print_insn_mnem(addr)
        count += 1
    if mnemonic != "cmp":
        continue
    size = idc.print_operand(addr,1)
    size = int(size [:2], 16)
    for i in range(0,5):
        addr = idc.prev_head(addr)
    for n in range(0,size):
        key = idc.GetOperandValue(addr,1)
        print key
        tmp = addr
        for i in range(0,size*2):
            tmp = idc.prev_head(tmp)
        plain = ''
        ctaddr = idc.GetOperandValue(tmp,1)
        varaddr = ctaddr
        byte = Byte(ctaddr)
        while byte != 0x00:
            plain += chr(byte ^ key)
            ctaddr += 1
            byte = Byte(ctaddr)
        print plain
        
        addr = idc.prev_head(idc.prev_head(addr))
        idc.set_name(varaddr,"_a{}".format(plain))

addr_array = [0x403731, 0x40373C, 0x403747, 0x403752, 0x40375D, 0x403768]

for addr in addr_array:
    plain=""
    text = idc.GetOperandValue(addr,1)
    tmp=text
    key = idc.GetOperandValue (0x403F67,1)
    byte = Byte(text)
    while byte != 0x00:
        plain += chr(byte ^ key)
        text += 1
        byte = Byte(text)
    print plain
    plain = plain.replace(' ','_')
    plain = plain.replace(',','_')
    plain = plain.replace('-','_')
    plain = plain.replace('/','_')
    plain = plain.replace('!','_')
    plain = plain.replace('^','_')
    plain = plain.replace('-','_')
    plain = plain.replace('+','_')
    plain = plain.replace('\'','_')
    plain = plain.replace(' ','_')
    idc.set_name(tmp,"_a{}".format(plain))

#DECODING UNICODE STRINGS
addr_array = [0x40307A, 0x40209A, 0x403252, 0x403597]
key_array = [0x403185, 0x402359, 0x4034C7, 0x40366E]
index = 0 
for addr in addr_array:
    mnem = idc.print_insn_mnem(addr)
    while mnem == "lea":
        text = idc.GetOperandValue(addr,1)
        tmp=text
        key = idc.GetOperandValue(key_array[index],1)
        plain=""
        word = Word(text)
        while word != 0:
            plain += chr(Word(text) ^ key)
            text= text+2
            word = Word(text)
        plain = plain.replace(' ','_')
        plain = plain.replace(',','_')
        plain = plain.replace('/','_')
        plain = plain.replace('!','')
        plain = plain.replace('^','_')
        plain = plain.replace('-','_')
        plain = plain.replace('+','_')
        plain = plain.replace('\'','_')
        plain = plain.replace('\\','_')
        idc.set_name(tmp,"_a{}".format(plain))
        addr= idc.next_head(addr)
        addr= idc.next_head(addr)
        mnem = idc.print_insn_mnem(addr)
    index += 1

addr = 0x40691D
text = idc.GetOperandValue(addr,1)
tmp=text
key = get_bytes(0x4082E9, 1)
plain=""
while mnem == "lea":
    
    text = idc.GetOperandValue(addr,1)
    tmp = text
    plain=""
    word = Word(text)
    while word != 0:
        plain += chr(Word(text) ^ ord(key))
        text = text+2
        word = Word(text)
    print plain
    plain = plain.replace ('\\','_')
    plain = plain.replace (' ','_')
    idc.set_name(tmp,"_a{}".format(plain))

    addr= idc.next_head(addr)
    addr= idc.next_head(addr)
    mnem = idc.print_insn_mnem(addr)